[{"/mnt/c/Users/compy/Desktop/project/src/index.js":"1","/mnt/c/Users/compy/Desktop/project/src/App.js":"2","/mnt/c/Users/compy/Desktop/project/src/Components/Home/Home.js":"3","/mnt/c/Users/compy/Desktop/project/src/Components/Login/Login.js":"4","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/BloodDonationUser.js":"5","/mnt/c/Users/compy/Desktop/project/src/Components/Login/PrivateRoute.js":"6","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/BloodRequistUser.js":"7","/mnt/c/Users/compy/Desktop/project/src/Components/Home/AboutUs.js":"8","/mnt/c/Users/compy/Desktop/project/src/Components/Home/Navbar.js":"9","/mnt/c/Users/compy/Desktop/project/src/Components/Login/LoginManager.js":"10","/mnt/c/Users/compy/Desktop/project/src/Components/Home/Main.js":"11","/mnt/c/Users/compy/Desktop/project/src/Components/Login/firebase.config.js":"12","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/firebaseConfig.js":"13","/mnt/c/Users/compy/Desktop/project/src/Components/Home/MessageModal/MessageModal.js":"14","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/Dashboard/Dashboard.js":"15"},{"size":326,"mtime":1717256650689,"results":"16","hashOfConfig":"17"},{"size":1346,"mtime":1717395388653,"results":"18","hashOfConfig":"17"},{"size":326,"mtime":1717246186898,"results":"19","hashOfConfig":"17"},{"size":6588,"mtime":1717246186911,"results":"20","hashOfConfig":"17"},{"size":3074,"mtime":1717305728961,"results":"21","hashOfConfig":"17"},{"size":1158,"mtime":1717394213188,"results":"22","hashOfConfig":"17"},{"size":3077,"mtime":1717306374176,"results":"23","hashOfConfig":"17"},{"size":2264,"mtime":1717312267466,"results":"24","hashOfConfig":"17"},{"size":2954,"mtime":1717246186900,"results":"25","hashOfConfig":"17"},{"size":4173,"mtime":1717246186911,"results":"26","hashOfConfig":"17"},{"size":2718,"mtime":1717391096203,"results":"27","hashOfConfig":"17"},{"size":398,"mtime":1717247460331,"results":"28","hashOfConfig":"17"},{"size":398,"mtime":1717304460460,"results":"29","hashOfConfig":"17"},{"size":2443,"mtime":1717391096308,"results":"30","hashOfConfig":"17"},{"size":3190,"mtime":1717395388715,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y6ntc6",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/compy/Desktop/project/src/index.js",[],"/mnt/c/Users/compy/Desktop/project/src/App.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Home/Home.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Login/Login.js",["67"],"import React, { useContext, useState } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport LoginBg from '../Image/Login/background.png';\r\nimport { createUserWithEmailAndPassword, handleGoogleSignIn, initializeLoginFramework, signInWithEmailAndPassword, handleFbSignIn } from './LoginManager';\r\nimport { UserContext } from '../../App';\r\nimport googleimage from \"../Image/Login/google-icon.png\";\r\nimport fbimage from \"../Image/Login/fb.png\";\r\nimport './Login.css';\r\nimport logo from '../Image/logo.jpg';\r\n\r\n\r\nconst Login = () => {\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [user, setUser] = useState({\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        photo: ''\r\n    });\r\n\r\n\r\n    initializeLoginFramework();\r\n\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    console.log(loggedInUser)\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const { from } = location.state || { from: { pathname: \"/dashboard\" } };\r\n\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    const googleSignIn = () => {\r\n        handleGoogleSignIn()\r\n            .then(res => {\r\n                handleResponse(res, true);\r\n            })\r\n    }\r\n\r\n    const fbSignIn = () => {\r\n        handleFbSignIn()\r\n            .then(res => {\r\n                handleResponse(res, true);\r\n            })\r\n    }\r\n\r\n    const handleResponse = (res, redirect) => {\r\n        setUser(res);\r\n        setLoggedInUser(res);\r\n        if (redirect) {\r\n            history.replace(from);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e) => {\r\n        let isFieldValid = true;\r\n        if (e.target.name === 'email') {\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n        }\r\n        if (e.target.name === 'password') {\r\n            const isPasswordValid = e.target.value.length > 6;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n            isFieldValid = isPasswordValid && passwordHasNumber;\r\n            console.log(isPasswordValid && passwordHasNumber);\r\n        }\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user };\r\n            console.log(user);\r\n            newUserInfo[e.target.name] = e.target.value;\r\n            setUser(newUserInfo);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        if (newUser && user.email && user.password) {\r\n            createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n                .then(res => {\r\n                    // handleResponse(res, true);\r\n                    setUser(res);\r\n                    setLoggedInUser(res);\r\n\r\n                })\r\n        }\r\n        if (!newUser && user.email && user.password) {\r\n            signInWithEmailAndPassword(user.email, user.password)\r\n                .then(res => {\r\n                    handleResponse(res, true);\r\n                    // setUser(res);\r\n                    // setLoggedInUser(res);\r\n                    // history.replace(from);\r\n                })\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\" style={{ height: \"100vh\" }}>\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"border\" >\r\n                        <div>\r\n                            <Link to=\"/\">\r\n                                <img src={logo} style={{ width: 50, height: 50 }} alt=\"logo\" />\r\n                            </Link>\r\n                        </div>\r\n                        <h4>Login</h4>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {newUser && <input type=\"text\" className=\"inputBox\" name=\"name\" onBlur={handleBlur} placeholder=\"Your Name\" />}\r\n                            <br />\r\n                            <input type=\"text\" name=\"email\" className=\"inputBox\" onBlur={handleBlur} placeholder=\"Your Email address\" required />\r\n                            <br />\r\n                            <input type=\"password\" name=\"password\" className=\"inputBox\" onBlur={handleBlur} placeholder=\"Password\" required />\r\n                            <br />\r\n\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <div><input type=\"checkbox\" name=\"userRemember\" id=\"\" />\r\n                                    <label htmlFor=\"userRemember\">Remember me</label></div>\r\n                                <a href=\"#\">Forget Password</a>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"submitBox\" value={newUser ? 'Sign Up' : 'Sign In'} />\r\n                        </form>\r\n                        <p style={{ color: 'red' }}>{user.error}</p>\r\n                        {user.success && <p style={{ color: 'green' }}>User {newUser ? 'created' : 'Logged In'} successfully</p>}\r\n\r\n                        <p className=\"no-account-text text-center\">\r\n                            Don't have an account?\r\n                        <span\r\n                                onClick={() => window.open(\"https://rb.gy/eibnw4\", \"_blank\")}\r\n                                className=\"create-account-link text-primary\"\r\n                            >\r\n                                Create an Google account\r\n                        </span>\r\n                        </p>\r\n\r\n                        <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\" />\r\n                        <label htmlFor=\"newUser\">New User Sign up</label><br></br>\r\n                        <div className=\"d-flex justify-content-around mb-2\">\r\n                            <button onClick={googleSignIn} className=\"button\"><img src={googleimage} style={{ width: 20, height: 20 }} alt=\"\" />Continue with Google</button>\r\n                            <button onClick={fbSignIn} className=\"button\"><img src={fbimage} style={{ width: 20, height: 20 }} alt=\"\" />Continue with Facebook</button>\r\n                            <br></br>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-2 d-none d-md-block align-self-end\">\r\n                    <img className=\"img-fluid\" src={LoginBg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/BloodDonationUser.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Login/PrivateRoute.js",["68","69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n  const isLoggedIn = () => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    const decodedToken = jwt_decode(token);\r\n\r\n    // get current time\r\n    const currentTime = new Date().getTime() / 1000;\r\n    // compare the expiration time with the current time\r\n    // will return false if expired and will return true if not expired\r\n    return decodedToken.exp > currentTime;\r\n  };\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedInUser.email || isLoggedIn() ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/BloodRequistUser.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Home/AboutUs.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Home/Navbar.js",["71"],"import React, { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport logo from '../Image/logo.jpg'\r\nimport MessageModal from './MessageModal/MessageModal';\r\n\r\nconst Navbar = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    console.log(setIsOpen);\r\n\r\n    function openModal() {\r\n        console.log(\"object\");\r\n        setIsOpen(true);\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n    const signOut = () => {\r\n        setLoggedInUser({});\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <img src={logo} width={40} height={40} alt=\"...\" />\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        {/* <a class=\"nav-link\" href=\"/#contactUs\">Contact Us</a> */}\r\n\r\n                        <div>\r\n                            <button\r\n                                onClick={openModal}\r\n                                // className=\"btn btn-outline-info\"\r\n                                className=\"btn btn-light\"\r\n                            >\r\n                                Contact Us\r\n                </button>\r\n                            <MessageModal\r\n                                modalIsOpen={modalIsOpen}\r\n                                closeModal={closeModal}\r\n                            />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"/#aboutUs\">About</a>\r\n                    </li>\r\n                </ul>\r\n                {loggedInUser.isSignedIn ? <div><img className=\"rounded-circle mx-1\" src={loggedInUser.photo} width=\"40px\" height=\"40px\" alt=\"\" /><button class=\"btn btn-outline-success my-2 my-sm-0\" onClick={signOut} >Log Out</button></div> : <Link to={{\r\n                    pathname: \"/dashboard\",\r\n                    state: 'donation'\r\n                }}><button class=\"btn btn-outline-success my-2 my-sm-0\">Login</button></Link>}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","/mnt/c/Users/compy/Desktop/project/src/Components/Login/LoginManager.js",["72","73","74"],"import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n        .then(res => {\r\n            const { displayName, photoURL, email } = res.user\r\n            const signInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                photo: photoURL,\r\n                success: true,\r\n                email: email,\r\n            }\r\n            // console.log(signInUser);\r\n            setUserToken();\r\n            return signInUser;\r\n            // console.log(displayName, photoURL, email);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\nconst setUserToken = () => {\r\n    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function (idToken) {\r\n        sessionStorage.setItem('token', idToken)\r\n        // console.log(idToken)\r\n        // Send token to your backend via HTTPS\r\n        // ...\r\n    }).catch(function (error) {\r\n        // Handle error\r\n    });\r\n}\r\nexport const handleFbSignIn = () => {\r\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n    return firebase.auth().signInWithPopup(fbProvider).then(function (result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        user.success = true;\r\n        return user;\r\n\r\n    }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n    });\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(res => {\r\n            const signedOutUser = {\r\n                isSignedIn: false,\r\n                name: '',\r\n                photo: '',\r\n                email: '',\r\n                error: '',\r\n                success: false,\r\n\r\n            }\r\n            return signedOutUser\r\n\r\n        }).catch(err => {\r\n\r\n        });\r\n}\r\n\r\nexport const createUserWithEmailAndPassword = (name, email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            const newUserInfo = res.user;\r\n            newUserInfo.error = '';\r\n            newUserInfo.success = true;\r\n            updateUserName(name);\r\n            return newUserInfo;\r\n        })\r\n\r\n        .catch(error => {\r\n            // Handle Errors here.\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            console.log(error)\r\n            return newUserInfo;\r\n\r\n        });\r\n}\r\n\r\nexport const signInWithEmailAndPassword = (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(res => {\r\n            const newUserInfo = res.user;\r\n            newUserInfo.error = '';\r\n            newUserInfo.success = true;\r\n            return newUserInfo;\r\n            //   console.log('Signing in user info', res.user)\r\n        })\r\n\r\n        .catch(function (error) {\r\n            // Handle Errors here.\r\n            const newUserInfo = {};\r\n            newUserInfo.error = error.message;\r\n            newUserInfo.success = false;\r\n            return newUserInfo;\r\n        });\r\n}\r\n\r\nconst updateUserName = name => {\r\n    const user = firebase.auth().currentUser;\r\n    user.updateProfile({\r\n        displayName: name\r\n    }).then(function () {\r\n        // Update successful.\r\n    }).catch(function (error) {\r\n        console.log(error);\r\n    });\r\n}","/mnt/c/Users/compy/Desktop/project/src/Components/Home/Main.js",["75"],"import React, { Component } from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Link } from \"react-router-dom\";\r\nimport image1 from \"../Image/HomeBackground/1.jpg\";\r\nimport image2 from \"../Image/HomeBackground/2.jpg\";\r\nimport image3 from \"../Image/HomeBackground/3.jpg\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div\r\n      id=\"carouselExampleIndicators\"\r\n      class=\"carousel slide\"\r\n      data-bs-ride=\"carousel\"\r\n    >\r\n      <ol class=\"carousel-indicators\">\r\n        <li\r\n          data-bs-target=\"#carouselExampleIndicators\"\r\n          data-bs-slide-to=\"0\"\r\n          class=\"active\"\r\n        ></li>\r\n        <li\r\n          data-bs-target=\"#carouselExampleIndicators\"\r\n          data-bs-slide-to=\"1\"\r\n        ></li>\r\n        <li\r\n          data-bs-target=\"#carouselExampleIndicators\"\r\n          data-bs-slide-to=\"2\"\r\n        ></li>\r\n      </ol>\r\n\r\n      <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\">\r\n          <img\r\n            src={image1}\r\n            style={{ width: \"300px\", height: \"450px\" }}\r\n            class=\"d-block w-100\"\r\n            alt=\"...\"\r\n          />\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img\r\n            src={image2}\r\n            style={{ width: \"300px\", height: \"450px\" }}\r\n            class=\"d-block w-100\"\r\n            alt=\"...\"\r\n          />\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img\r\n            src={image3}\r\n            style={{ width: \"250px\", height: \"450px\" }}\r\n            class=\"d-block\"\r\n            alt=\"...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/dashboard\",\r\n            state: \"donation\",\r\n          }}\r\n        >\r\n          <button class=\"btn btn-outline-secondary mx-2\">Blood Donation</button>\r\n        </Link>\r\n\r\n        <Link\r\n          to={{\r\n            pathname: \"/dashboard\",\r\n            state: \"requisition\",\r\n          }}\r\n        >\r\n          <button class=\"btn btn-outline-secondary\">Blood Requisition</button>\r\n        </Link>\r\n      </div>\r\n      <br />\r\n      <br />\r\n\r\n      <a\r\n        class=\"carousel-control-prev\"\r\n        href=\"#carouselExampleIndicators\"\r\n        role=\"button\"\r\n        data-bs-slide=\"prev\"\r\n      >\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n      </a>\r\n      <a\r\n        class=\"carousel-control-next\"\r\n        href=\"#carouselExampleIndicators\"\r\n        role=\"button\"\r\n        data-bs-slide=\"next\"\r\n      >\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","/mnt/c/Users/compy/Desktop/project/src/Components/Login/firebase.config.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/firebaseConfig.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Home/MessageModal/MessageModal.js",[],"/mnt/c/Users/compy/Desktop/project/src/Components/Dashboard/Blood/Dashboard/Dashboard.js",[],{"ruleId":"76","severity":1,"message":"77","line":128,"column":33,"nodeType":"78","endLine":128,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"83","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"84","line":9,"column":24,"nodeType":"81","messageId":"82","endLine":9,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":38,"column":25,"nodeType":"78","endLine":38,"endColumn":54},{"ruleId":"79","severity":1,"message":"85","line":45,"column":13,"nodeType":"81","messageId":"82","endLine":45,"endColumn":18},{"ruleId":"79","severity":1,"message":"86","line":57,"column":13,"nodeType":"81","messageId":"82","endLine":57,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":59,"column":13,"nodeType":"81","messageId":"82","endLine":59,"endColumn":23},{"ruleId":"79","severity":1,"message":"88","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setLoggedInUser' is assigned a value but never used.","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'Component' is defined but never used."]